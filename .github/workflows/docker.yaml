name: docker

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["Web", "Mice"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - run: git fetch --prune --unshallow --tag

      - name: image_name
        id: image_name
        run: echo "::set-output name=image_name::$(echo ${{ matrix.project }} | tr '[:upper:]' '[:lower:]')"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/BigBoot/giganticemu-${{ steps.image_name.outputs.image_name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        #if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        #if: github.event_name != 'pull_request'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: GiganticEmu.${{ matrix.project }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
